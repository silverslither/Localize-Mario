--------------------Very Good Quality--------------------

[literally do nothing]

--------------------Good Quality--------------------

(srand (realtime))
(let loop ((x 1))
(if (< x NUM)
(begin
(file-png-load 1 (string-append "[Drive]:\\path\\to\\file\\" (number->string (- (* x 4) 3)) ".png") (string-append "[Drive]:\\path\\to\\file\\" (number->string (- (* x 4) 3)) ".png"))
(gimp-image-scale-full x 512 480 1)
(gimp-image-scale-full x 256 240 1)
(gimp-drawable-brightness-contrast (car (gimp-image-get-active-layer x)) (/ (- (rand 21) 11) 100) 0)
(file-jpeg-save 1 x (car (gimp-image-get-active-layer x)) (car (gimp-image-get-filename x)) (car (gimp-image-get-filename x)) 0.5 0 0 0 "" 0 1 0 0)
(loop (+ x 1)))))

--------------------Bad Quality--------------------

(srand (realtime))
(let loop ((x 1))
(if (< x NUM)
(begin
(file-png-load 1 (string-append "[Drive]:\\path\\to\\file\\" (number->string (- (* x 4) 2)) ".png") (string-append "[Drive]:\\path\\to\\file\\" (number->string (- (* x 4) 2)) ".png"))
(gimp-image-scale-full x 254 238 2)
(gimp-image-scale-full x 256 240 2)
(gimp-image-scale-full x (+ 383 (rand 257)) 240 2)
(gimp-image-scale-full x 256 240 2)
(gimp-drawable-brightness-contrast (car (gimp-image-get-active-layer x)) (* (- (* 2 (rand 2)) 3) (+ 0.09 (/ (rand 11) 100))) (* (- (* 2 (rand 2)) 3) (+ 0.09 (/ (rand 11) 100))))
(plug-in-hsv-noise 1 x (car (gimp-image-get-active-layer x)) 3 0 0 (+ 15 (rand 17)))
(file-jpeg-save 1 x (car (gimp-image-get-active-layer x)) (car (gimp-image-get-filename x)) (car (gimp-image-get-filename x)) 0.5 0 0 0 "" 0 1 0 0)
(loop (+ x 1)))))

--------------------Very Bad Quality--------------------

(srand (realtime))
(let loop ((x 1))
(if (< x NUM)
(begin
(file-png-load 1 (string-append "[Drive]:\\path\\to\\file\\" (number->string (- (* x 4) 1)) ".png") (string-append "[Drive]:\\path\\to\\file\\" (number->string (- (* x 4) 1)) ".png"))
(gimp-image-scale-full x 254 238 2)
(gimp-image-scale-full x 256 240 2)
(gimp-image-scale-full x (+ 383 (rand 257)) 240 2)
(gimp-image-scale-full x 256 240 2)
(gimp-drawable-brightness-contrast (car (gimp-image-get-active-layer x)) (* (- (* 2 (rand 2)) 3) (+ 0.29 (/ (rand 11) 100))) (* (- (* 2 (rand 2)) 3) (+ 0.09 (/ (rand 11) 100))))
(plug-in-hsv-noise 1 x (car (gimp-image-get-active-layer x)) 3 0 0 (+ 31 (rand 33)))
(gimp-context-set-opacity 10)
(gimp-drawable-edit-gradient-fill (car (gimp-image-get-active-layer x)) 0 0 FALSE 5 2 FALSE (- (rand 257) 1) (- (rand 241) 1) (- (rand 257) 1) (- (rand 241) 1))
(file-jpeg-save 1 x (car (gimp-image-get-active-layer x)) (car (gimp-image-get-filename x)) (car (gimp-image-get-filename x)) 0.5 0 0 0 "" 0 1 0 0)
(loop (+ x 1)))))